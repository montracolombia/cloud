import os
import json
from cryptography.fernet import Fernet
from google.cloud import storage
from io import BytesIO

# Obtener la clave encriptada desde las variables de entorno
clave_encriptada = os.getenv("GCS_SECRET_KEY")

if not clave_encriptada:
    raise ValueError("Clave secreta no encontrada. Configúrala en las variables de entorno.")

# Convertir la clave en bytes y desencriptar
clave_bytes = clave_encriptada.encode()
f = Fernet(clave_bytes)
try: 
    datos_encriptados = b"gAAAAABnyFfid8Ta8idqtHa2lJ0tDeSxJySkEFyJVHjmP_OXIMdxYQrZKQ0yeVND7jCQrDE5FTdlPVvbJx4gKxg2DyhRAvVrtWfndRo6mp1V21s1jgPgaLSNuoea5EU-sN3Ov2vHn_YvOlClRAl9HHuJqLHD8xmfgGUGdoRa9-9QLckAK2ZeUBimSqcd_TVHc7vsX13juGEQ4XevvMxomKLu7jcZYb8Xf5eDkPGsNQzYc2125h6PIFBv1dDivTsxyqChEKMLqma3cSVeaJnDv1h0CfAA-lfbEpAxb5oH5roI_7qoPg3lGTwcDa2bIMYEjXXjfRVKjnmXIa4AriJiXrx5qmjv_UwPM8JXGCXjOdims_Ejh3Mzu2OAdQl5fWQHtpo7mg5LmPDq7cv0WTUtSa3DEhZHb5GIjzGuxSEJ9uthopQiTA6AZL--70sUGBGjFwXPm_Tb-hTKjqGKd1UFNXAfxyQhs0Wdm5jopgr5RBCdGrIb7mGKWT_7v8zNzi2JVV7qjxRL0OKvAqxvdAAqG63ra3etmNLlXfuP8R0b2n35Niaa8fD5G8xbip8R5SpDx8IiiIz3-g7NR3P7RiC-UnJtYDnHcQw2NamU5mVM9zLFjovmHS9zVA7LH6qeWrRyOfvU0gO1eDPZftorpt7l2chxuWWc3EEXu0JIL1uARWlfdBFle3FUNjfG3uSzrZdJmQ1G5ZKvSGiVZZ0I-gmqKy9QssU2GkyU3lUdv6nOo-Cp4cZcsaUcUvnT0yE54U8NJr2QdE-VKpt1vxphkxKNEd3ZR1zegx9Bn4vK9NPyy3My5CYu0s6ZATCnDsPTIvsaNKjgPoZ5QSp0-BPxNHW3l_lSf1pdNa93OIntbM7DvidBNER2XUNUYTNehCDdzhoNMZYN_CyxHV1PzonHUz95kpW9IYy1-WdghMLDFy_gcmaui9yXKOVcqb0xswFSJFRyHf_i0Ki592nwn42HjS4nJ8UdbaQRBARxeial5WPCjw78J-LjVRAyJ76UkpyH_IEuiZH9llispSmixehUNMZYucICo8Q_zhe2qqraXBOd1INBpdoEovT1hzWjq5Y0k1LQ7IEP4OTOCkxMezMRu4jpW7N1OJY4ZzUZJGZBgmgEM4VUbTQDJ-02oZEDZftmIQomh7FWG4nKgRpbwmDfivmgRV_6QtLAnQ_b6y737lVDtmkKCSWo09VBnw4Xbx5uAOKWF1YeAtzwk5-jfttNFn9eTC7u4AM6Vofidu_3vaIgfkpXQ0sA0qtOPb3VAcv845Dlt5ySH1YrN2cabHiXSMWizCG2ZgaBBcZRehAkw9gLTCd1H5ASZ1Hb99tlGibWLeA95r5GO6GZ-8-Kzmlf5qP-SUjjS5_jrFI1zTr9GBL5DQ-o35Oa33Opz_70vCVOTMjeX_ULjThN_LErBEqzZ8D5NWg-BbRb36sh4mrHaJS78wi4dNOZQD6k-ucAmhjy5DKxjpAQB_Gs2wROFtBpAUtCILsN96lRk05iLp2Ul08xhNR7CS0OjIzVUUYMApwN04Z04s9vsyayVx3cp8ursDgRSJqs2OSNE9C61CuE5hwUdJdk3HNET0VdxuHcKg7dIcxkvgnQK6-qMXOF_LeCOrXst4WQwTlWq9lETURhfJSkj6z3zY9CFIlqnudHnUZ275Bjb1Ep-pUB50YNp3SX71MDv9_P6f813UjWem0faYmOTQObDvbSCEnUTfAFJFO3e8_taJNEpDzyTlhzHkdxPVVNnIOmsU9JnK25MuTi_pW1KY47t6R33rn22FN8pFBSwpC8sAYvVjfidGnnqW_f6Pn11GvKo8Aw3l7_8KxWpYv795EcQLWUm-mULYXFtHnGOPaAJwSHUfgzz7GvnhYjNZfIwad2fYJ-383_b4v6aRfGsZJBit99Vpz50SVqe-52F9pJIw1GuEgReYbUfpakKfujWmErVpcrP56HwTjWKdbs-SUwPvXF97IIdIVEX62kziisE0Lh-962SH1wzoaCC6e9Y10M55d-EPVPPw9cJalWegOn6cNvjsLhoSdynZJpZ5GgT-6pMjDegmqZn-LSwB0F_9zDgfQ2oJe-2siMPNeb2ac7yOSft2jB9f9y5WRId9KcL8qlmZvnM_DTWm7U2Coue5SreCVDFRp_ssvhAvXmk9AwRPQa1YQ0U0iKUMRSj-JnTist3QJjfz5sU4EKDcY_Nc1gjV4oSTiRNsp1HrDin8JWRo7YJcPCPRh_m4mTand93eJmhscl3cn9xmPCr7FPYwLTZXyKZHKjVXOZSp4hZ5XElyt7v0j_0haPnI0sC_qJYPY3DJQwKFwFH23HJbEzAZ4FZ1ghEqXWb_lxIR2ylhMgsti92darH2hu6A07Ldi0aYp1ly52rbtjVmyCgiz1BeAHBxYzd6d14EhKIkWk1s6V-bfcr8mW2sgIGJQ2Kt9h5OH2LSbL-ZG9m1EYgs9FA-fk7N0OQBTC-gIeDCM25s-N7P-YHTllJVwv5a8co4pYke0WttswPvqyt5dL6r7JAnFtJCcD1XD9ZXVGCysTEZdjtRyoVP_vOasu0ase9Zz8g5PrLHUKb2BRfcr-H_W5WgtCu--XB_jUqFZgJfxu3ls32gWRTl1fC8op2WfZT6reWyPrhtNSBgfzH5x3vhJrGOmdabcbjegalynmM3HJt2nU1Ch0AweEnegIMJ_qSYCbHTKAoY9J2TEk9cJlH5V5Ets-OkEiBelG-C5PUBWOkrOnM3H5XRNa6fLn-VxCweRa7_uVKoictmAW_xp9Y6Z5A3YmRvk78HGkfoqFwnXC8Gammq6bONqGZB6Yk6YlpHDCtllhcDPpR4DL1FARB98pSZUD7bpRytodSN6ykOuj4M4EBnZhzP0fE-Ohg_4nXZTzneAENTNdkA05lQ7lBTPSXUEvUuk9jqyAVTlU2oQYhv2bWt7JhxmxYva4W_F_l5nyTOPulu_UX3xmhZJpagsZkc5-I0vP7fS8SlkInrxTjDRRGiNHxdOLJvAK7ZUZmMh80Zi76XWT9jeythqFv2i0j8MKKyy7mLMQ8SySy_MJrDUrxW0ts9Y2IE5IkmLnDkBd5xtJdi-x831La3ZSYDx4KaE6RcoavDuergnGQyrdW22ktz_8T15TD7eEVMw1RcqAMpsJiyGRfS53lcI0mLLPvN3m40KqkLkXeGMf4sA5mpX9AayzrP93J1bF1X2pzeQc8IRYrDxWTapjXShM8D43YGrINBsI6iKtUg=="

    datos_desencriptados = f.decrypt(datos_encriptados)
    credenciales_dict = json.loads(datos_desencriptados.decode())  # Cargar como diccionario

    print("✅ Credenciales desencriptadas en memoria.")

except Exception as e:
    raise RuntimeError("Error al desencriptar las credenciales") from e

# Crear cliente de Google Cloud Storage sin archivo .json
storage_client = storage.Client.from_service_account_info(credenciales_dict)
bucket = storage_client.bucket("cloudmontra")

def subir_imagenes():
    CARPETA_LOCAL = "images"

    for archivo in os.listdir(CARPETA_LOCAL):
        if archivo.endswith(".jpg"):
            blob = bucket.blob(archivo)
            blob.upload_from_filename(os.path.join(CARPETA_LOCAL, archivo))
            print(f"Subido: {archivo}")
            os.remove(os.path.join("images", archivo))  # Elimina la imagen después de subirla

if __name__ == "__main__":
    subir_imagenes()
